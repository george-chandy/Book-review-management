"""alter

Revision ID: b154087d0437
Revises: 28e7b04f5b14
Create Date: 2025-03-14 11:34:45.194880

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b154087d0437'
down_revision: Union[str, None] = '28e7b04f5b14'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('password_reset_token', 'expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.drop_constraint('password_reset_token_user_id_key', 'password_reset_token', type_='unique')
    op.drop_constraint('password_reset_token_user_id_fkey', 'password_reset_token', type_='foreignkey')
    op.create_foreign_key(None, 'password_reset_token', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('password_reset_token', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('password_reset_token', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'password_reset_token', type_='foreignkey')
    op.create_foreign_key('password_reset_token_user_id_fkey', 'password_reset_token', 'users', ['user_id'], ['id'])
    op.create_unique_constraint('password_reset_token_user_id_key', 'password_reset_token', ['user_id'])
    op.alter_column('password_reset_token', 'expires_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###
